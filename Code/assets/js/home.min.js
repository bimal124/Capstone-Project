function storageUtility(classPathID) {
	this.inProgress = 0;
	this.server_time = true;
	this.auction_stack = new Array();
	this.getStackIndexByID = function (place, value) {
		for (x in this.auction_stack) {
			if (this.auction_stack[x][place] == value) {
				return x;
			}
		}
		return false;
	}
}
var myVars = new storageUtility();
function auctionUpdater() {
	this.checkData = function () {
		this.updateTimer();
		if (myVars.inProgress == 0) {
			myVars.inProgress = 1;
			this.requestAuctionData();
		}
	}
	this.createArray = function (itemList) {
		var tmp_stack = new Array();
		$(itemList).find("auc").each(function () {
			var auction_id = $(this).find("id").text();
			var timer = $(this).find("timer").text();
			var amt = $(this).find("amt").text();
			var user = $(this).find("user").text();
			var status = $(this).find("status").text();
			var total_amt = $(this).find("total_amt").text();
			var saving = $(this).find("saving").text();
			var type = $(this).find("bid_type").text();
			var auction_type = $(this).find("auc_type").text();
			tmp_stack.push([auction_id, timer, amt, user, status, total_amt, saving, type, auction_type]);
		});
		myVars.auction_stack = tmp_stack;
	}
	this.init = function (path) {
		myVars.path = path;
		$.ajax({
			url : myVars.path + "aucstatus.xml",
			cache : false,
			dataType : 'xml',
			async : false,
			success : this.createArray

		});
		$.ajax({
			url : myVars.path + "servertimer_penny",
			cache : false,
			async : false,
			dataType : 'text',
			success : function (resp) {
				myVars.server_time = parseInt(resp, 10);
			}
		});
		
		$.ajax({
			url : myVars.path + "servertimer_penny/hours",
			cache : false,
			async : false,
			dataType : 'text',
			success : function (resp) {
				myVars.server_time_hours = parseInt(resp, 10);
				
			}
		});
	}
	this.updateTimer = function () {
		myVars.server_time = myVars.server_time + 1;
		// console.log('srvr_time:' +myVars.server_time);
		var x = 0;
		if (myVars.auction_stack.length > 0) {
			
			for (x in myVars.auction_stack) {
				var auction_id = myVars.auction_stack[x][0];
				var timer = myVars.auction_stack[x][1];
				var amt = myVars.auction_stack[x][2];
				var user = myVars.auction_stack[x][3];
				var status = myVars.auction_stack[x][4];
				var total_amt = myVars.auction_stack[x][5];
				var saving = myVars.auction_stack[x][6];

				var auction_type = myVars.auction_stack[x][8];

				var exchange_rate = $("#exchange_rate").html();

				var pause_start_hour = parseInt($("#pause_start_time").html())*60;
				var pause_end_hour = parseInt($("#pause_end_time").html())*60;
				//var current_date = new Date(Date.parse(myVars.server_time*1000)).getTime();

				//var current_date = new Date(myVars.server_time*1000);
				//var current_hour = new Date(Date.parse(myVars.server_time*1000)).getHours();
				var current_hour = myVars.server_time_hours;
				/*console.log('server_time:' + myVars.server_time);
				console.log('current_date:'+ current_date);*/
				//console.log('current_hour:'+current_hour);
				//console.log('pause_start_hour:'+pause_start_hour);
				//console.log('pause_end_hour:'+pause_end_hour);
				//console.log('auction_type:'+auction_type);
				if (status == 'Live') {
					var auc_current_price = parseFloat(amt) * parseFloat(exchange_rate);

					var auc_total_price = parseFloat(total_amt) * parseFloat(exchange_rate);
					var paused = '';
					if(auction_type == 1 && pause_end_hour > pause_start_hour && (current_hour >= pause_start_hour && current_hour < pause_end_hour))
					{
						paused = 'Paused';							
					}
					else if(auction_type == 1 && pause_end_hour < pause_start_hour && (current_hour >= pause_start_hour || current_hour < pause_end_hour))
					{
						paused = 'Paused';							
					}					
					else
					{
						paused = '';
					}
					//console.log('paused:' +paused);
					var auc_timer = (paused == 'Paused') ? paused : this.formattedDate(timer - myVars.server_time);
					
					if (auc_timer == 'Checking...') {
						$("#" + auction_id + '_timer').css("color", "#FF0000");
						$("#bidnow_"+auction_id+",.pop_up,#bid_"+auction_id).show();
					} else if (auc_timer == 'Paused') {
						$("#" + auction_id + '_timer').css("color", "#B21E74");
						$("#bidnow_"+auction_id+",#bid_"+auction_id).hide();
					} else if (auc_timer.toLowerCase().indexOf("s") >= 0) {
						$("#" + auction_id + '_timer').css("color", "#FF0000");
						$("#bidnow_"+auction_id+",.pop_up,#bid_"+auction_id).show();
					} else {
						$("#" + auction_id + '_timer').css("color", "#f00");
						$("#bidnow_"+auction_id+",.pop_up,#bid_"+auction_id).show();
					}
					$("#" + auction_id + '_timer').html(auc_timer);
					


					/*if($(".current-bid-amt").length > 0){
						var cur_sign = $(".current-bid-amt").html().replace(/[0-9]/g, '');
						cur_sign = cur_sign.replace('.','');
						$(".current-bid-amt").html(cur_sign+auc_current_price.toFixed(2));
					}*/
					
					/*if($("#" + auction_id + '_leader').html() != user)
					{
						$("#" + auction_id + '_timer').addClass('big-animate');
						$("#" + auction_id + '_leader').addClass('big-animate');						
					}*/
					$("#" + auction_id + '_amt').html(auc_current_price.toFixed(2));	
					$("#" + auction_id + '_leader').html(user);
					
					if ($("#auc_id").html() == auction_id) {
						$("#cur_amount").html(auc_current_price.toFixed(2));
						$("#total_price").html(auc_total_price.toFixed(2));
						$("#saving").html(saving);
					}
				} else if (status == 'Closed') {
					$("#" + auction_id + '_timer').css("color", "#FF0000");
					$("#" + auction_id + '_timer').html($('#closed').html());
					$("#" + auction_id + '_leader').html("<font color='#9fc341'>" + user + "</font>");
					$("#" + auction_id + '_amt').html(amt);
				} else if (status == 'Cancel') {
					$("#" + auction_id + '_timer').css("color", "#FF0000");
					$("#" + auction_id + '_timer').html($('#cancel').html());
					$("#" + auction_id + '_leader').html(user);
				}
			}
		}
	}
	this.formattedDate = function (time_left) {
		if (time_left >= 0 && time_left <= 60)
			return time_left + 's';
		var oneMinute = 60;
		var oneHour = oneMinute * 60;
		var oneDay = oneHour * 24;
		var dayfield = Math.floor(time_left / oneDay);
		var hourfield = Math.floor((time_left - dayfield * oneDay) / oneHour);
		var minutefield = Math.floor((time_left - dayfield * oneDay - hourfield * oneHour) / oneMinute);
		var secondfield = Math.floor((time_left - dayfield * oneDay - hourfield * oneHour - minutefield * oneMinute));
		if (dayfield > 0)
			dayfield = dayfield + "d";
		else
			dayfield = "";
		if (hourfield < 10)
			hourfield = "0" + hourfield;
		if (minutefield < 10)
			minutefield = "0" + minutefield;
		if (secondfield < 10)
			secondfield = "0" + secondfield;
		if (time_left < 0) {
			return 'Checking...';
		} else if (dayfield == 0 && hourfield == 0) {
			return minutefield + ':' + secondfield;
		} else {
			return dayfield + ' ' + hourfield + ':' + minutefield + ':' + secondfield;
		}
	}
	this.requestAuctionData = function () {
		$.ajax({
			url : myVars.path + "aucstatus.xml",
			cache : false,
			dataType : 'xml',
			success : this.updateAuctionBlocks,
			complete : function () {
				myVars.inProgress = 0;
			}
		});
	}
	this.updateAuctionBlocks = function (itemList) {

		if (itemList != null) {
			var tmp_stack = new Array();
			$(itemList).find("auc").each(function () {
				var auction_id = $(this).find("id").text();
				var timer = $(this).find("timer").text();
				var amt = $(this).find("amt").text();
				var user = $(this).find("user").text();
				var status = $(this).find("status").text();
				var total_amt = $(this).find("total_amt").text();
				var saving = $(this).find("saving").text();
				var type = $(this).find("bid_type").text();
				var auction_type = $(this).find("auc_type").text();
				var winner_id = $(this).find("winner_id").text();
				var ckh = myVars.getStackIndexByID(0, auction_id)
				
				
					if (myVars.auction_stack[ckh][2] != amt) {
						
						$("#" + auction_id + '_timer').addClass('big-animate');
						$("#" + auction_id + '_leader').addClass('big-animate');
						
						/*$("#" + auction_id + '_leader').animate({
							backgroundColor : "#FF632F"
						}, 600).animate({
							//backgroundColor : "#ffffff"
							backgroundColor : '#f0f0f0'
						}, 600);*/
						
						
						
						myVars.animation = false;
						
						var exchange_rate = $("#exchange_rate").html();
						var new_amt = parseFloat(amt) * parseFloat(exchange_rate);
						
						if ($('.bid-history-container').length > 0) {
							if (type == 'A')
								var bidType = $('#type_A').html();
							else
								var bidType = $('#type_N').html();
							
							var sign = $("#currency_sign").html();
							var display_in = $("#display_in").html();
							
					/*		if (display_in == 'Right')
								$('#bid-history_' + auction_id).prepend('<ul><li>' + new_amt.toFixed(2) + ' ' + sign + '</li><li>' + user + '</li><li class="width55">' + bidType + '</li></ul>');
							else
								$('#bid-history_' + auction_id).prepend('<ul><li>' + sign + ' ' + new_amt.toFixed(2) + '</li><li>' + user + '</li><li class="width55">' + bidType + '</li></ul>');
							var counts = $('#bid-history_' + auction_id + ' ul').length;
							if (counts > 6) {
								$('#bid-history_' + auction_id + ' ul:nth-child(' + (counts) + ')').remove();
							}*/
							//console.log(timer);
							var date = new Date(timer*1000);
							var year = date.getFullYear();
							var month = date.getMonth() + 1;
							var day = date.getDate();
							month = month.toString().length == 1 ? '0' + month.toString() : month;
							var hours = date.getHours();
							var minutes = "0" + date.getMinutes();
							var seconds = "0" + date.getSeconds();
							// var formattedTime = year + '-' + month + '-' + day + '<br/>' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
							var formattedTime = year + '-' + month + '-' + day +' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);
							
							if (display_in == 'Right')
								$('#bid-history_' + auction_id).prepend('<tr role="row" class="odd" ><td>' + new_amt.toFixed(2) + ' ' + sign + '</td><td>' + user + '</td><td class="width55">' + formattedTime + '</td></tr>');
							else
								$('#bid-history_' + auction_id).prepend('<tr role="row" class="odd"><td>' + sign + ' ' + new_amt.toFixed(2) + '</td><td>' + user + '</td><td class="width55">' + formattedTime + '</td></tr>');
							var counts = $('#bid-history_' + auction_id + ' tr').length;
							if (counts >= total_bid_history) {
								$('#bid-history_' + auction_id + ' tr:nth-child(' + (counts) + ')').remove();
							}
							
							
						}
						
						$("#" + auction_id + '_amt').html(new_amt.toFixed(2));	
						$("#" + auction_id + '_leader').html(user);
						//$("#" + auction_id + '_leader').css("backgroundColor", "#FFFFFF");
						//$("#" + auction_id + '_leader').css("backgroundColor", "#19ca5c");
						
						//console.log(myVars.auction_stack[ckh][3] +'!='+ user +'&&'+ user +'=='+ $("#username_"+winner_id).text() +'&&'+ type +'=='+ 'A');
						//update user balance
						if (myVars.auction_stack[ckh][3] != user && user == $("#username_"+winner_id).text() && type== 'A')
						{
							//console.log('Yes');
							$.ajax({url: website_location+ "/biding/penny_process/get_balance", success: function(result){
									$("#user_credits").html(result);
									//console.log(result);
							  }});
						}
						
						
					} else {
						
						$("#" + auction_id + '_timer').removeClass('big-animate');
						$("#" + auction_id + '_leader').removeClass('big-animate');
						myVars.animation = false;
					}
					tmp_stack.push([auction_id, timer, amt, user, status, total_amt, saving, type, auction_type]);
			});
			myVars.auction_stack = tmp_stack;
		}
	}
}
function loginRegister() {
	$("#lg-modal-frm").modal('show');
	// $("#lg-modal-frm").modal({
	// 	overlayCss : {
	// 		backgroundColor : "#000"
	// 	},
	// 	onOpen : function (dialog) {
	// 		dialog.overlay.fadeIn('fast', function () {
	// 			dialog.data.hide();
	// 			dialog.container.fadeIn('fast', function () {
	// 				dialog.data.slideDown('fast');
	// 			});
	// 		});
	// 	}
	// });
	$("#lg-modal-frm .submit-btn").click(function () {
		$('#lg-modal-frm form').submit();
	});
	return false;
}
function procced(site_url, auc_id, user_id) {

	if (user_id == undefined || user_id == null || user_id == '') {

		loginRegister();
	} else if (auc_id == undefined || auc_id == null || auc_id == '') {
		$('#error_' + auc_id).html("<p class='er'>Some Parameter Missing.</p>");
		$('#error_' + auc_id).fadeIn("fast");
		setTimeout('$("' + '#error_' + auc_id + '").hide()', 2000);
	} else if (site_url == undefined || site_url == null || site_url == '') {
		$('#error_' + auc_id).html("<p class='er'>Some Parameter Missing.</p>");
		$('#error_' + auc_id).fadeIn("fast");
		setTimeout('$("' + '#error_' + auc_id + '").hide()', 2000);
	} else {
		$.ajax({
			url : site_url + "/biding/penny_process",
			type : 'POST',
			datatype : 'html',
			data : {
				auc_id : auc_id,
				user_id : user_id
			},
			success : function (data) {

				data = jQuery.trim(data);
				//console.log(data);
				msg = data.split("@@");
				var result_storer = msg[0].split("=");
				var result = jQuery.trim(result_storer[1]);
				var message_result = msg[1].split("=");
				var message = jQuery.trim(message_result[1]);

				if (result == "error") {
					if (message == 'low_balance') {
						$("#no_balance").modal('show');
					} else {
						/*
						$('#error_' + auc_id).html("<p class='er'>" + message + "</p>");
						$('#error_' + auc_id).fadeIn("fast");
						setTimeout('$("' + '#error_' + auc_id + '").hide()', 2000);*/
						$('#custom_err p').html(message);
						$("#custom_err").modal('show');
					}
				} else if (result == "success") {
					//console.log(data);
					var balance = msg[1];
					var balance_holder = "#user_credits";
					$(balance_holder).html(balance);
					$("#fuser_credits").html(balance);
					
				} else if(result == "success_bonus_point") {
					//console.log(data);
					var bonus_point = msg[1];
					var bonus_point_holder = "#user_bonus_points";
					$(bonus_point_holder).html(bonus_point);					
				}
			}
		});
	}
	return false;
}
function set_autobid(site_url) {
	var site_ur_loder = site_url.replace('en', '');
	//$('.button_sec').html('<img src=' + site_ur_loder + '/assets/images/ajax_loader_small.gif>');
	$(".bg_spiner").append('<div class="overlay"><i class="fa fa-refresh fa-spin"></i></div>');
	$.post(site_url + '/biding/autobid/book', $("#autobid").serialize(), function (data) {
		// data = jQuery.trim(data);
		var obj = JSON.parse(data)
		 $("div").remove(".overlay");		
		if (obj.status == 'error') {
			$('#error').html(obj.msg);
			$('#error').show();
		} else if (obj.status== 'success') {
			$('#error').hide();			
			$('#no_rec').hide();
			$('#auto_bids_tbody').append(obj.values);
			$('#autobid')[0].reset();
		}
	});
}
function refresh_autobid(site_url, auction_id) {
	var site_ur_loder = site_url.replace('en', '');
	$('#error').html('<img src=' + site_ur_loder + '/assets/images/ajax_loader_small.gif>');
	$.ajax({
		url : site_url + '/biding/autobid/refresh',
		type : 'POST',
		datatype : 'html',
		data : {
			auction_id : auction_id
		},
		success : function (data) {
			var obj = JSON.parse(data)
			// msg = data.split("##");
			if (obj.status == 'success') {
				   $('.auto_bids_datas tbody').html('<img src=' + site_ur_loder + '/assets/images/ajax_loader_small.gif>');
				setTimeout (function(){
			      $('.auto_bids_datas tbody').html(obj.values);
			    },2000);
				
				$('#error').hide();
				
			} else if (obj.status == 'error') {
				$('#error').show();
				$('#error').html(obj.msg);
			}
		}
	});
}

function cancel_autobid (site_url, auction_id, auto_id) {
	
	job=confirm("Are you sure to cancel autobids?");
	if(job!=true)
	{
		return false;
	}
	$.ajax({
		url : site_url + '/biding/autobid/cancel',
		type : 'POST',
		datatype : 'html',
		data : {
			auction_id : auction_id,
			auto_id : auto_id,
		},
		success : function (data) {
			//console.log(data);
			data = jQuery.trim(data);
			msg = data.split("=");
			if (msg[0] == 'result') {
				$('#bid_'+auto_id).hide(1000);
				$('#error').hide();
			} else {
				$('#error').html(msg[1]);
				$('#error').show();
			}
		}
	});
}

$("#autobidSet").click(function() {
    //$(".nav").tabs("select", this.hash);
	$(".auto-bid-set").trigger('click');
});



//Reload Captcha
	$("#new_captcha_button").click(function() {

				$(".fa-refresh").addClass("fa-spin");

                $.ajax({
                        url : reload_captcha_url,
                        cache : false,
                        success : function(imageFromTheController){ //the success will not be executed until the server respond whith 200okk status

                           var newCaptcha = $('<span id="captcha_container">'+imageFromTheController+'</span>');
                           $('#captcha_container').replaceWith(newCaptcha);
						   $(".fa-refresh").removeClass("fa-spin");
                        }
                });
                return false;
			});
